/* tslint:disable */
/* eslint-disable */
/**
 * CodeCharacter API
 * Specification of the CodeCharacter API
 *
 * The version of the OpenAPI document: 2023.0.1
 * Contact: delta@nitt.edu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { UserMatchStats } from '../models';

/**
 * StatsApi - interface
 *
 * @export
 * @interface StatsApiInterface
 */
export interface StatsApiInterface {
  /**
   * Gets all statistics for the current user
   * @summary Get all General Stats for current user and top user
   * @param {*} [options] Override http request option.
   * @throws {RequiredError}
   * @memberof StatsApiInterface
   */
  getStatsRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Array<UserMatchStats>>>;

  /**
   * Gets all statistics for the current user
   * Get all General Stats for current user and top user
   */
  getStats(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Array<UserMatchStats>>;
}

/**
 *
 */
export class StatsApi extends runtime.BaseAPI implements StatsApiInterface {
  /**
   * Gets all statistics for the current user
   * Get all General Stats for current user and top user
   */
  async getStatsRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<Array<UserMatchStats>>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token('http-bearer', []);

      if (tokenString) {
        headerParameters['Authorization'] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/stats/`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response);
  }

  /**
   * Gets all statistics for the current user
   * Get all General Stats for current user and top user
   */
  async getStats(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<Array<UserMatchStats>> {
    const response = await this.getStatsRaw(initOverrides);
    return await response.value();
  }
}
